class Egg{constructor(){this.key="egg",this.name="Easter Eggs";let max_r=Math.min(max_x-min_x,max_y-min_y)/2;this.config={radius:{name:"Size",value:null,input:{type:"createSlider",params:[80,.5*Math.min(max_x,max_y),max_r/2,1],class:"slider",displayValue:!0}},reverse:{name:"Reverse",value:null,input:{type:"createCheckbox",attributes:[{type:"checkbox",checked:null}],params:[0,1,0],displayValue:!1}}},this.path=[]}draw(){this.config.radius.value=parseInt(document.querySelector("#pattern-controls > div:nth-child(1) > input").value),document.querySelector("#pattern-controls > div.pattern-control:nth-child(1) > span").innerHTML=this.config.radius.value;let path=this.calc(this.config.radius.value);return this.path=path,path}calc(radius,rotation_direction=1){var x,y,theta;let egg_path=new Array,egg_1,egg_2;var path=new Array,point=new Array,step=0;let sides=60;for(var i=0;i<=60;i++)theta=i/60*(2*Math.PI)-Math.PI,point=this.parametricEgg(theta),egg_path.push([radius*point[0],radius*point[1]]);let path_center=this.getPathCenter(egg_path);egg_path=this.translatePath(egg_path,[-path_center[0],-path_center[1]]),egg_path=this.rotatePath(egg_path,-.5*Math.PI);let spiral_path=this.spiralizePath(egg_path,10,60),stripe_path;return egg_1=egg_path.concat(spiral_path.reverse()),egg_1=this.rotatePath(egg_1,Math.PI/10),egg_1=this.translatePath(egg_1,[-30,0]),egg_2=this.stripePath(egg_path).reverse(),egg_2=egg_2.concat(egg_path),egg_2=this.scalePath(egg_2,.8),egg_2=this.translatePath(egg_2,[30,0]),egg_2=this.rotatePath(egg_2,-Math.PI/8),path=egg_1.concat(egg_2)}parametricEgg(theta){let x,y,k=1,b=2.02;return x=1/(2*Math.sqrt(1+Math.pow(1,2)))*((Math.pow(1,2)-1)/1*b+(Math.pow(1,2)+1)/1*b*Math.sqrt(Math.pow(b,2)-4*Math.cos(theta))),y=2*Math.sin(theta)/(b+Math.sqrt(Math.pow(b,2)-4*Math.cos(theta))),x*=.4,[x,y]}arrayColumn(arr,n){return arr.map(a=>a[n])}getPathCenter(path){let x_coordinates=this.arrayColumn(path,0),y_coordinates=this.arrayColumn(path,1),min_x=Math.min(...x_coordinates),min_y=Math.min(...y_coordinates);return[min_x+(Math.max(...x_coordinates)-min_x)/2,min_y+(Math.max(...y_coordinates)-min_y)/2]}stripePath(path){let new_path=new Array,index;for(var i=0;i<path.length;i++)i%4==0?index=i:i%4==1?index=i:i%4==2?index=path.length-i:i%4==3&&(index=path.length-i),new_path.push(path[index]);return new_path}spiralizePath(path,revolutions){let point=new Array,new_path=new Array,i_max=path.length*revolutions,spiral_center=[0,-50];for(var i=0;i<i_max;i++)point=[path[i%path.length][0],path[i%path.length][1]],new_path.push([-(point[0]*(i/i_max)+-spiral_center[0]*i/i_max)+spiral_center[0],point[1]*(i/i_max)+-spiral_center[1]*i/i_max+spiral_center[1]]);return new_path}scalePath(path,scale){return path.map((function(a){return[a[0]*scale,a[1]*scale]}))}translatePath(path,delta){return path.map((function(a){return[a[0]+delta[0],a[1]+delta[1]]}))}rotatePath(path,theta){return path.map((function(a){return[a[0]*Math.cos(theta)-a[1]*Math.sin(theta),a[0]*Math.sin(theta)+a[1]*Math.cos(theta)]}))}}