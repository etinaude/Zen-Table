class ShapeMorph{constructor(){this.key="shapemorph",this.name="Shape Morph",this.sides=60;let radius=Math.min(max_x/2,max_y/2);this.circle=this.circleShape(this.sides,radius),this.heart=this.heartShape(this.sides,radius),this.star=this.starShape(this.sides,radius),this.square=this.squareShape(this.sides,radius),this.config={startShape:{name:"Inside Shape",value:"square",input:{type:"createSelect",options:{circle:"Circle",heart:"Heart",star:"Star",square:"Square"}}},endShape:{name:"Outside Shape",value:"circle",input:{type:"createSelect",options:{circle:"Circle",heart:"Heart",star:"Star",square:"Square"}}},revolutions:{name:"Revolutions",value:null,input:{type:"createSlider",params:[1,40,10,1],class:"slider",displayValue:!0}},twist:{name:"Twist",value:null,input:{type:"createSlider",params:[-1,1,0,.01],class:"slider",displayValue:!0}},completion:{name:"Completion",value:null,input:{type:"createSlider",params:[.1,1,.5,.1],class:"slider",displayValue:!0}},reverse:{name:"Reverse",value:null,input:{type:"createCheckbox",attributes:[{type:"checkbox",checked:null}],params:[0,1,0],displayValue:!1}}},this.path=[]}draw(){this.config.startShape.value=document.querySelector("#pattern-controls > div:nth-child(1) > select").value,this.config.endShape.value=document.querySelector("#pattern-controls > div:nth-child(2) > select").value,this.config.revolutions.value=parseInt(document.querySelector("#pattern-controls > div:nth-child(3) > input").value),document.querySelector("#pattern-controls > div.pattern-control:nth-child(3) > span").innerHTML=this.config.revolutions.value,this.config.twist.value=parseFloat(document.querySelector("#pattern-controls > div:nth-child(4) > input").value),document.querySelector("#pattern-controls > div.pattern-control:nth-child(4) > span").innerHTML=this.config.twist.value,this.config.completion.value=parseFloat(document.querySelector("#pattern-controls > div:nth-child(5) > input").value),document.querySelector("#pattern-controls > div.pattern-control:nth-child(5) > span").innerHTML=100*this.config.completion.value+"%";let path=this.calc(this[this.config.startShape.value],this[this.config.endShape.value],this.sides,this.config.revolutions.value,this.config.completion.value,this.config.twist.value);return this.path=path,path}calc(base_shape,end_shape,steps_per_revolution,revolutions,completion,twist){var x,y;let current_revolution;var path=new Array,step=0;let growth_factor,lerp_amount;const max_t=revolutions*(2*Math.PI),min_t=(1-completion)*max_t;let t=min_t;for(;t<max_t;)t=step/steps_per_revolution*(2*Math.PI)+min_t,current_revolution=Math.floor(t/(2*Math.PI)),lerp_amount=current_revolution/revolutions,x=t/max_t*lerp(base_shape[step%steps_per_revolution][0],end_shape[step%steps_per_revolution][0],lerp_amount),y=t/max_t*lerp(base_shape[step%steps_per_revolution][1],end_shape[step%steps_per_revolution][1],lerp_amount),path.push(this.rotationMatrix(x,y,twist*t/steps_per_revolution)),path.push([x,y]),step++;return path.pop(),path}rotationMatrix(x,y,theta){return[x*Math.cos(theta)-y*Math.sin(theta),x*Math.sin(theta)+y*Math.cos(theta)]}circleShape(array_size,radius){let shape=[];for(var i=0;i<=array_size+0;i++)shape.push([radius*Math.cos(i/array_size*2*Math.PI),-radius*Math.sin(i/array_size*2*Math.PI)]);return shape}heartShape(array_size,radius){let shape=[],x,y,theta;for(var i=0;i<=array_size+0;i++)theta=i/array_size*(2*Math.PI)+.5*Math.PI,x=16*Math.pow(Math.sin(theta),3)*10,y=10*(13*Math.cos(theta)-5*Math.cos(2*theta)-2*Math.cos(3*theta)-Math.cos(4*theta)),shape.push([x,y]);return shape}starShape(array_size,radius){let shape=[],x,y,theta,i_radius;for(var star_points=5,points_per_side=array_size/5,minimum_radius=.4*radius,i=0;i<=array_size;i++)theta=i/array_size*(2*Math.PI),i_radius=i%points_per_side==0?radius:i%(points_per_side/2)==0?minimum_radius:i%points_per_side<points_per_side/2?radius-i%(points_per_side/2)/(points_per_side/2)*(radius-minimum_radius):minimum_radius+i%(points_per_side/2)/(points_per_side/2)*(radius-minimum_radius),x=i_radius*Math.cos(theta),y=-i_radius*Math.sin(theta),shape.push([x,y]);return shape}squareShape(array_size,radius){let i_max=array_size/8,shape=[];for(var i=0;i<i_max;i++)shape.push([radius,-i/i_max*radius]);i_max=array_size/4;for(var i=0;i<i_max;i++)shape.push([radius-i/i_max*(2*radius),-radius]);i_max=array_size/4;for(var i=0;i<i_max;i++)shape.push([-radius,i/i_max*(2*radius)-radius]);i_max=array_size/4;for(var i=0;i<i_max;i++)shape.push([i/i_max*(2*radius)-radius,radius]);i_max=array_size/8;for(var i=0;i<i_max;i++)shape.push([radius,radius-i/i_max*radius]);return shape.push([radius,0]),shape}}