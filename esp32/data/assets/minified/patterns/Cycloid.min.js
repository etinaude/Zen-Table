class Cycloid{constructor(){this.key="cycloid",this.name="Cycloid",this.config={radius_a:{name:"Fixed Radius (A)",value:null,input:{type:"createSlider",params:[1,Math.floor(.5*Math.min(max_x,max_y)),30,1],class:"slider",displayValue:!0}},radius_b:{name:"Fixed Radius (B)",value:null,input:{type:"createSlider",params:[-Math.floor(.5*Math.min(max_x,max_y)),-1,-Math.floor(.25*Math.min(max_x,max_y)),1],class:"slider",displayValue:!0}},arm_length:{name:"Arm Length",value:null,input:{type:"createSlider",params:[1,.5*Math.min(max_x,max_y),Math.floor(.25*Math.min(max_x,max_y)),1],class:"slider",displayValue:!0}},reverse:{name:"Reverse",value:null,input:{type:"createCheckbox",attributes:[{type:"checkbox",checked:null}],params:[0,1,0],displayValue:!1}}},this.path=[]}draw(){this.config.radius_a.value=parseInt(document.querySelector("#pattern-controls > div:nth-child(1) > input").value),this.config.radius_b.value=parseInt(document.querySelector("#pattern-controls > div:nth-child(2) > input").value),this.config.arm_length.value=parseInt(document.querySelector("#pattern-controls > div:nth-child(3) > input").value),document.querySelector("#pattern-controls > div.pattern-control:nth-child(1) > span").innerHTML=this.config.radius_a.value,document.querySelector("#pattern-controls > div.pattern-control:nth-child(2) > span").innerHTML=this.config.radius_b.value,document.querySelector("#pattern-controls > div.pattern-control:nth-child(3) > span").innerHTML=this.config.arm_length.value;let path=this.calc(this.config.radius_a.value,this.config.radius_b.value,this.config.arm_length.value);return this.path=path,path}calc(radius_a,radius_b,arm_length){for(var x,y,theta=0,path=new Array,step=0,step_scale=10,cycloid_period=abs(radius_b/this.greatest_common_divisor(parseInt(radius_a),parseInt(radius_b)))*(2*Math.PI);theta<cycloid_period;)theta=radians(10*step),x=(radius_a+radius_b)*Math.cos(theta)+arm_length*Math.cos((radius_a+radius_b)/radius_b*theta),y=(radius_a+radius_b)*Math.sin(theta)+arm_length*Math.sin((radius_a+radius_b)/radius_b*theta),path.push([x,y]),step++;return path}greatest_common_divisor(a,b){return 0==b?a:this.greatest_common_divisor(b,a%b)}}