class ShapeSpin{constructor(){this.key="shapespin",this.name="Shape Spin",this.base_shape=[[-160,0],[80,-80],[160,0],[80,80],[-160,0]],this.config={steps:{name:"Steps",value:null,input:{type:"createSlider",params:[1,120,30,1],class:"slider",displayValue:!0}}},this.path=[]}draw(){this.config.steps.value=parseInt(document.querySelector("#pattern-controls > div:nth-child(1) > input").value),document.querySelector("#pattern-controls > div.pattern-control:nth-child(1) > span").innerHTML=this.config.steps.value;let path=this.calc(this.base_shape,this.config.steps.value);return this.path=path,path}calc(base_shape,steps_per_revolution){var x,y,t=0,path=new Array,step=0;let growth_factor;const max_t=2*Math.PI;for(;t<max_t;)t=step/steps_per_revolution*(2*Math.PI),base_shape.forEach((function(element){path.push(this.rotationMatrix(element[0],element[1],t))}),this),step++;return path}rotationMatrix(x,y,theta){return[x*Math.cos(theta)-y*Math.sin(theta),x*Math.sin(theta)+y*Math.cos(theta)]}translate(pos,delta){return pos+delta}}